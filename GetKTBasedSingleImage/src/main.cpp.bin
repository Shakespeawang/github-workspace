I2luY2x1ZGUgPG9wZW5jdi5ocHA+DQojaW5jbHVkZSA8Y2VyZXMuaD4NCiNpbmNsdWRlICJvcHRpbWl6ZS5oIg0KDQoNCnVzaW5nIG5hbWVzcGFjZSBjdjsNCnVzaW5nIG5hbWVzcGFjZSBzdGQ7DQoNCg0KY3Y6Ok1hdCByZWFkQUltYWdlKGludCBfaSwgaW50IF9qLCBpbnQgX2ssIHN0cmluZyBwYXRoLCBzdHJpbmcgc3VmZml4LCBzdHJpbmcgY29ubmVjdG9yKQ0Kew0KCXN0cmluZ3N0cmVhbSBmaWxlbmFtZTsNCglmaWxlbmFtZSA8PCBwYXRoIDw8IF9pIDw8IGNvbm5lY3RvciA8PCBfaiA8PCBjb25uZWN0b3IgPDwgX2sgPDwgc3VmZml4Ow0KCWN2OjpNYXQgaW1hZ2UgPSBpbXJlYWQoZmlsZW5hbWUuc3RyKCkpOw0KCXJldHVybiBpbWFnZTsNCn0NCg0KYm9vbCByZWFkUGFyYW1zKHN0ZDo6dmVjdG9yPGN2OjpNYXQ+ICYgdiwgY29uc3Qgc3RkOjpzdHJpbmcgcGF0aCwgc2l6ZV90IG51bXMsIGN2OjpTaXplIHNpemUsIHN0ZDo6c3RyaW5nIHRhZykNCnsNCgljdjo6RmlsZVN0b3JhZ2UgZnMocGF0aCwgY3Y6OkZpbGVTdG9yYWdlOjpSRUFEKTsNCglpZiAoIWZzLmlzT3BlbmVkKCkpDQoJCXJldHVybiBmYWxzZTsNCglmb3IgKGludCBpID0gMDsgaSA8IG51bXM7IGkrKykNCgl7DQoJCXN0ZDo6c3RyaW5nc3RyZWFtIHNzOw0KCQlzcyA8PCB0YWcgPDwgaTsNCgkJY3Y6Ok1hdCBtKHNpemUsIENWXzY0RkMxKTsNCgkJZnNbc3Muc3RyKCldID4+IG07DQoJCWFzc2VydCghbS5lbXB0eSgpKTsNCgkJdi5wdXNoX2JhY2sobSk7DQoJfQ0KCWZzLnJlbGVhc2UoKTsNCglyZXR1cm4gdHJ1ZTsNCn0NCg0KDQppbnQgbWFpbihpbnQgYXJnYyxjaGFyICogYXJndltdKQ0Kew0KCXN0cmluZyBpbWFnZV9wYXRoID0gIkQ6XFyxz9K1yei8xlxcuaSzzM/uxL9cXENhbGlicmF0aW9uT3B0aW1pemF0aW9uXFxSZWxlYXNlXFxtYXRsYWJcXCI7DQoJc3RyaW5nIEtpX3htbCA9ICJEOlxcsc/StcnovMZcXLmks8zP7sS/XFxDYWxpYnJhdGlvbk9wdGltaXphdGlvblxcUmVsZWFzZVxcbWF0bGFiXFxLLnlhbWwiOw0KCXN0cmluZyBUaV94bWwgPSAiRDpcXLHP0rXJ6LzGXFy5pLPMz+7Ev1xcQ2FsaWJyYXRpb25PcHRpbWl6YXRpb25cXFJlbGVhc2VcXG1hdGxhYlxcVC55YW1sIjsNCglpbnQgY2FtZXJhX251bXMgPSAxLCBpbWFnZV9udW1zID0gNDsNCglTaXplIGJvYXJkU2l6ZSgxMiwxMyksIHNxdWFyZVNpemUoMzAsIDMwKTsNCg0KCS8vtsHI68/gu/q1xMTazeKyzsr9DQoJdmVjdG9yPE1hdD5jYW1lcmFfcG9zLCBwb3NlX3RpbWVzdGFtcCwgZGlzdG9ydGlvbiwgaW50cmluc2ljOw0KCXJlYWRQYXJhbXMoaW50cmluc2ljLCBLaV94bWwsIGNhbWVyYV9udW1zLCBTaXplKDMsIDMpLCAiS18iKTsNCglyZWFkUGFyYW1zKGRpc3RvcnRpb24sIEtpX3htbCwgY2FtZXJhX251bXMsIFNpemUoMSwgNSksICJESVNUT1JUSU9OXyIpOw0KCXJlYWRQYXJhbXMoY2FtZXJhX3BvcywgVGlfeG1sLCBjYW1lcmFfbnVtcywgU2l6ZSg0LCA0KSwgImNhbWVyYV9wb3NlXyIpOw0KCXJlYWRQYXJhbXMocG9zZV90aW1lc3RhbXAsIFRpX3htbCwgaW1hZ2VfbnVtcywgU2l6ZSg0LCA0KSwgInBvc2VfdGltZXN0YW1wXyIpOw0KDQoJZG91YmxlIGZfYm91bmRbMl0gPSB7IDAgfSwgazFfYm91bmRbMl0gPSB7IDAgfSwgazJfYm91bmRbMl0gPSB7IDAgfTsNCglmb3IgKHNpemVfdCBpID0gMDsgaSA8IGNhbWVyYV9udW1zOyBpKyspDQoJew0KCQlmb3IgKHNpemVfdCBqID0gMDsgaiA8IGltYWdlX251bXM7IGorKykNCgkJew0KCQkJTWF0IHJlYWxJbWcgPSByZWFkQUltYWdlKDAsIGksIGosIGltYWdlX3BhdGgsICIuanBnIiwgIi0iKTsNCgkJCQ0KCQkJUG9pbnQyZCBwcmluY2lwYWxQdChpbnRyaW5zaWNbaV0uYXQ8ZG91YmxlPigwLCAyKSwgaW50cmluc2ljW2ldLmF0PGRvdWJsZT4oMSwgMikpOw0KCQkJZG91YmxlIGZvY2FsTGVuZ3RoOw0KCQkJTWF0IHJvdE1hdHJpeCwgdHJhblZlY3QsIGRpc3Q7DQoJCQlpbWFnZVJ1bihyZWFsSW1nLCBib2FyZFNpemUsIHNxdWFyZVNpemUsIHByaW5jaXBhbFB0LCBmb2NhbExlbmd0aCwgcm90TWF0cml4LCB0cmFuVmVjdCwgZGlzdCwgZl9ib3VuZCwgazFfYm91bmQsIGsyX2JvdW5kKTsNCg0KCQkJY291dCA8PCAiVHJ1ZSB2YWx1ZToiIDw8IGVuZGw7DQoJCQljb3V0IDw8ICJLOiIgPDwgZW5kbCA8PCBpbnRyaW5zaWNbaV0gPDwgZW5kbDsNCgkJCWNvdXQgPDwgIlQ6IiA8PCBlbmRsIDw8IHBvc2VfdGltZXN0YW1wW2pdIDw8IGVuZGw7DQoJCQljb3V0IDw8ICJEOiIgPDwgZW5kbCA8PCBkaXN0b3J0aW9uW2ldIDw8IGVuZGw7DQoNCgkJCWNvdXQgPDwgIk9wdGltaXplZCB2YWx1ZToiIDw8IGVuZGw7DQoJCQljb3V0IDw8ICJmb2NhbExlbmd0aDoiIDw8IGZvY2FsTGVuZ3RoIDw8IGVuZGw7DQoJCQljb3V0IDw8ICJyb3RNYXRyaXg6IiA8PCBlbmRsIDw8IHJvdE1hdHJpeCA8PCBlbmRsOw0KCQkJY291dCA8PCAidHJhblZlY3Q6IiA8PCBlbmRsIDw8IHRyYW5WZWN0IDw8IGVuZGw7DQoJCQljb3V0IDw8ICJkaXN0OiIgPDwgZW5kbCA8PCBkaXN0IDw8IGVuZGwgPDwgZW5kbCA8PCBlbmRsOw0KCQl9DQoJfQ0KCXN5c3RlbSgicGF1c2UiKTsNCglyZXR1cm4JMDsNCn0NCg0KDQoNCg0K